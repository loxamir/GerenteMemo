{
  "docs":[
    {
      "_id": "_design/Informes",
      "views": {
        "VentaDiaria": {
          "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'sale' && doc.state != 'QUOTATION'){\n    var margin = 0;\n    for (var x = 0, len = doc.lines.length; x < len; x++) {\n      margin += (doc.lines[x].price - doc.lines[x].cost)*doc.lines[x].quantity;\n    }\n    emit([doc.date.split(\"T\")[0], doc.pay_cond_id, doc.contact_id, margin], doc.total);\n  }\n}",
          "reduce": "_sum"
        },
        "CompraDiaria": {
          "reduce": "_sum",
          "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'purchase' && doc.state != 'QUOTATION'){\n    emit([doc.date.split(\"T\")[0], doc.pay_cond_id, doc.contact_id], doc.total);\n  }\n}"
        },
        "ProductoDiario": {
          "reduce": "_sum",
          "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'sale' && doc.state != 'QUOTATION'){\n    var margin = 0;\n    for (var x = 0, len = doc.lines.length; x < len; x++) {\n      margin = (doc.lines[x].price - doc.lines[x].cost)*doc.lines[x].quantity;\n      emit([doc.date.split(\"T\")[0], doc.lines[x].product_name, doc.contact_name, margin, doc.lines[x].quantity, doc.lines[x].price, doc.lines[x].cost, doc.payment_name, doc.seller_name, doc.lines[x].product_id], doc.total);\n    }\n  }\n}"
        },
        "CompraProductoDiario": {
          "reduce": "_sum",
          "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'purchase' && doc.state != 'QUOTATION'){\n    var margin = 0;\n    for (var x = 0, len = doc.lines.length; x < len; x++) {\n      //margin += (doc.lines[x].price - doc.lines[x].cost)*doc.lines[x].quantity;\n      emit([doc.date.split(\"T\")[0], doc.lines[x].product_name, doc.contact_name, margin, doc.lines[x].quantity, doc.lines[x].price, doc.lines[x].cost, doc.payment_name, doc.seller_name, doc.lines[x].product_id], doc.total);\n    }\n  }\n}"
        },
        "A Cobrar": {
          "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move' && doc.amount_residual != 0){\n    if (doc.accountTo_id.split(\".\")[1] == 'receivable'){\n      emit([doc.dateDue.split(\"T\")[0], doc.contact_name, doc.accountFrom_name, doc.origin_id, doc.contact_id, doc._id], doc.amount_residual);\n    }\n  }\n}"
        },
        "A Pagar": {
          "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move' && doc.amount_residual != 0){\n    if (doc.accountFrom_id.split(\".\")[1] == 'payable'){\n      emit([doc.dateDue.split(\"T\")[0], doc.contact_name, doc.accountFrom_name, doc.origin_id, doc.contact_id, doc._id], doc.amount_residual);\n    }\n  }\n}"
        },
        "ServicioProductoDiario": {
          "reduce": "_sum",
          "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'service'){\n    var margin = 0;\n    for (var x = 0, len = doc.works.length; x < len; x++) {\n      margin = (doc.works[x].price - doc.works[x].cost)*doc.works[x].quantity;\n      emit([doc.date.split(\"T\")[0], doc.works[x].product.name, doc.contact_name, margin, doc.works[x].quantity, doc.works[x].price, doc.works[x].cost, doc.payment_name, doc.seller_name, doc.works[x].product._id], doc.total);\n    }\n    for (var x = 0, len = doc.lines.length; x < len; x++) {\n      margin = (doc.lines[x].price - doc.lines[x].cost)*doc.lines[x].quantity;\n      emit([doc.date.split(\"T\")[0], doc.lines[x].product_name, doc.contact_name, margin, doc.lines[x].quantity, doc.lines[x].price, doc.lines[x].cost, doc.payment_name, doc.seller_name, doc.lines[x].product_id], doc.total);\n    }\n  }\n}"
        },
        "ServicioDiario": {
          "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'service'){\n    var margin = 0;\n    for (var x = 0, len = doc.works.length; x < len; x++) {\n      margin = (doc.works[x].price - doc.works[x].cost)*doc.works[x].quantity;\n      emit([doc.works[x].date.split(\"T\")[0], doc.pay_cond_id, doc.contact_id, margin, 1, doc.works[x].product.name, doc.works[x].product._id], doc.works[x].price*doc.works[x].quantity);\n    }\n  }\n}",
          "reduce": "_sum"
        },
        "ProduccionProductoDiario": {
          "reduce": "_sum",
          "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'production'){\n    var margin = 0;\n    for (var x = 0, len = doc.works.length; x < len; x++) {\n      margin = (doc.works[x].price - doc.works[x].cost)*doc.works[x].time;\n      emit([doc.date.split(\"T\")[0], 'Mano de Obra', doc.contact_name, margin, doc.works[x].time, doc.works[x].price, doc.works[x].cost, doc.payment_name, doc.seller_name, 'product.labour', doc.product_name], doc.total);\n    }\n    for (var x = 0, len = doc.lines.length; x < len; x++) {\n      margin = (doc.lines[x].price - doc.lines[x].cost)*doc.lines[x].quantity;\n      emit([doc.date.split(\"T\")[0], doc.lines[x].description, doc.contact_name, margin, doc.lines[x].quantity, doc.lines[x].price, doc.lines[x].cost, doc.payment_name, doc.seller_name, doc.lines[x].product_id, doc.product_name], doc.total);\n    }\n  }\n}"
        },
        "ProduccionDiaria": {
          "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'production'){\n    var valueAdded = doc.product.price*doc.quantity - doc.total;\n    emit([doc.date.split(\"T\")[0], doc.product_name, doc.product._id, doc.quantity, valueAdded, doc.input_amount, doc.work_amount], doc.total);\n  }\n}",
          "reduce": "_sum"
        },
        "Actividades": {
          "map": "function (doc) {\n  if (doc.date){\n    emit(doc.date, doc._id, 1);\n  }\n}"
        },
        "Variacion": {
          "reduce": "_sum",
          "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move' && !doc.close_id){\n    if (doc.accountTo_id.split('.')[1] == 'cash' || doc.accountTo_id.split('.')[1] == 'bank' || doc.accountTo_id.split('.')[1] == 'check') {\n      emit([1, doc.accountTo_id, 1], doc.amount);  \n    }\n    if (doc.accountFrom_id.split('.')[1] == 'cash' || doc.accountFrom_id.split('.')[1] == 'bank' || doc.accountFrom_id.split('.')[1] == 'check') {\n      emit([0, doc.accountFrom_id, 0], -doc.amount);\n    }\n  }\n}"
        },
        "Cheques": {
          "reduce": "_sum",
          "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'check'){\n      emit([doc.account_id, doc.name, doc.state, doc._id], parseFloat(doc.amount));\n  }\n}"
        },
        "productUse": {
          "reduce": "_sum",
          "map": "function (doc) {\n  if(doc.product_id){\n    emit([doc.product_id, doc._id], 1);\n  }\n  if (doc.lines){\n    for (var x = 0, len = doc.lines.length; x < len; x++) {\n      if(doc.lines[x].product_id){\n        emit([doc.lines[x].product_id, doc._id], 1);\n      }\n    }\n  }\n  if (doc.inputs){\n    for (var x = 0, len = doc.inputs.length; x < len; x++) {\n      if(doc.inputs[x].product_id){\n        emit([doc.inputs[x].product_id, doc._id], 1);\n      }\n    }\n  }\n}"
        },
        "contactUse": {
          "reduce": "_sum",
          "map": "function (doc) {\n  if(doc.contact_id){\n    emit([doc.contact_id, doc._id], 1);\n  }\n  if (doc.contacts){\n    for (var x = 0, len = doc.contacts.length; x < len; x++) {\n      if(doc.contacts[x].contact_id){\n        emit([doc.contacts[x].contact_id, doc._id], 1);\n      }\n    }\n  }\n}"
        }
      },
      "language": "javascript"
    },
    {
    "_id": "_design/stock",
    "views": {
      "Depositos": {
        "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'stock-move'){\n    emit([doc.warehouseTo_id, doc.product_id, doc._id, doc.product_name], doc.quantity);\n    emit([doc.warehouseFrom_id, doc.product_id, doc._id, doc.product_name], -doc.quantity);\n  }\n}",
        "reduce": "_sum"
      },
      "A Cobrar": {
        "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move' && doc.amount_residual != 0){\n    if (doc.accountTo_id.split(\".\")[1] == 'receivable'){\n      emit([doc.contact_id, doc.origin_id, doc._id], doc.amount_residual);\n    }\n  }\n}",
        "reduce": "_sum"
      },
      "A Pagar": {
        "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move' && doc.amount_residual != 0){\n    if (doc.accountFrom_id.split(\".\")[1] == 'payable'){\n      emit([doc.contact_id, doc.origin_id, doc._id], doc.amount_residual);\n    }\n  }\n}",
        "reduce": "_sum"
      },
      "Fluxo": {
        "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move'){\n    if (!\n      ((\n        doc.accountFrom_id.split('.')[1] == 'cash'\n        || doc.accountFrom_id.split('.')[1] == 'bank'\n        || doc.accountFrom_id.split('.')[1] == 'check'\n      ) && (\n        doc.accountTo_id.split('.')[1] == 'cash'\n        || doc.accountTo_id.split('.')[1] == 'bank'\n        || doc.accountTo_id.split('.')[1] == 'check'\n      ))\n    ){\n      if (doc.accountFrom_id.split('.')[1] == 'cash' || doc.accountFrom_id.split('.')[1] == 'bank' || doc.accountFrom_id.split('.')[1] == 'check'){\n        emit([doc.date.split(\"T\")[0], doc.accountTo_name, doc.contact_name, doc.name, doc._id], -doc.amount);\n      } else if (doc.accountTo_id.split('.')[1] == 'cash' || doc.accountTo_id.split('.')[1] == 'bank' || doc.accountTo_id.split('.')[1] == 'check'){\n        emit([doc.date.split(\"T\")[0], doc.accountFrom_name, doc.contact_name, doc.name, doc._id], doc.amount);\n      }\n    }\n  }\n}",
        "reduce": "_sum"
      },
      "Custos": {
        "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'work'){\n    // emit(doc._id, doc.works[0]);\n    doc.works.forEach(function(work) {\n      // emit(doc._id, 2);\n      work.travels.forEach(function(travel) {\n        emit(travel.vehicle._id, travel.distance);  \n      })\n      work.inputs.forEach(function(input) {\n        emit(input.product._id, input.quantity*input.price);  \n      })\n    })\n\n  }\n}",
        "reduce": "_sum"
      },
      "Contas": {
        "reduce": "_sum",
        "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move'){\n    emit([doc.accountTo_id, doc.contact_id, doc._id], doc.amount);\n    emit([doc.accountFrom_id, doc.contact_id, doc._id], -doc.amount);\n  }\n}"
      },
      "ResultadoDiario": {
        "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move'){\n    emit([doc.date.split(\"T\")[0], doc.accountTo_id, doc._id, doc.accountFrom_id], doc.amount);\n    emit([doc.date.split(\"T\")[0], doc.accountFrom_id, doc._id, doc.accountTo_id], -doc.amount);\n  }\n}",
        "reduce": "_sum"
      },
      "Caixas": {
        "reduce": "_sum",
        "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move'){\n    if (doc.accountTo_id.split('.')[1] == 'cash' || doc.accountTo_id.split('.')[1] == 'bank' || doc.accountTo_id.split('.')[1] == 'check') {\n      if (doc.state == 'WAITING'){\n        emit([doc.accountTo_id, doc.closed, doc.close_id, doc.both, doc._id], 0);  \n      } else {\n        emit([doc.accountTo_id, doc.closed, doc.close_id, doc.both, doc._id], doc.amount);    \n      }\n    }\n    if (doc.accountFrom_id.split('.')[1] == 'cash' || doc.accountFrom_id.split('.')[1] == 'bank' || doc.accountFrom_id.split('.')[1] == 'check') {\n      if (doc.state == 'WAITING'){\n        emit([doc.accountFrom_id, doc.closed, doc.close_id, doc.both, doc._id], 0);\n      } else {\n        emit([doc.accountFrom_id, doc.closed, doc.close_id, doc.both, doc._id], -(doc.amount));\n      }\n    }\n  }\n}"
      },
      "Areas": {
        "reduce": "_sum",
        "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'work'){\n    emit([doc.area_id, doc._id], doc.cost);\n    if (doc.machine){\n      for (var x = 0, len = doc.machine.length; x < len; x++) {\n        emit([doc.machine[x].machine._id, doc._id], parseFloat(doc.machine[x].hour)*parseFloat(doc.machine[x].machine.cost));\n      }\n    }\n  }\n}"
      },
      "Animals": {
        "reduce": "_sum",
        "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'work'){\n      emit([doc.animal_id, doc._id], doc.cost);  \n  }\n}"
      },
      "Crops": {
        "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'cash-move' && doc.close_id == ''){\n      emit([doc._id], 1);  \n  }\n}"
      },
      "Machines": {
        "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'work'){\n    if (doc.machine_id){\n      emit([doc.machine_id, doc._id], doc.cost);  \n    }\n    if (doc.machine2_id){\n      emit([doc.machine2_id, doc._id], doc.cost);  \n    }\n    if (doc.machine){\n      for (var x = 0, len = doc.machine.length; x < len; x++) {\n        emit([doc.machine[x].machine._id, doc._id], parseFloat(doc.machine[x].hour)*parseFloat(doc.machine[x].machine.cost));\n      }\n    }\n  }\n}",
        "reduce": "_sum"
      },
      "CantidadVendida": {
        "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'sale'){\n    emit(doc._id, 1);\n  }\n}"
      },
      "ValorVendido": {
        "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'sale'){\n    emit(doc._id, doc.total);\n  }\n}"
      },
      "CaixasForeing": {
        "reduce": "_sum",
        "map": "function (doc) {\n  if(doc.accountTo_id && doc.accountFrom_id && doc._id.split(\".\")[0] == 'cash-move'){\n    if (doc.accountTo_id.split('.')[1] == 'cash' || doc.accountTo_id.split('.')[1] == 'bank' || doc.accountTo_id.split('.')[1] == 'check') {\n      if (doc.state == 'WAITING'){\n        emit([doc.accountTo_id, doc.closed, doc.close_id, doc.both, doc._id], 0);  \n      } else {\n        emit([doc.accountTo_id, doc.closed, doc.close_id, doc.both, doc._id], parseFloat(doc.currency_amount) || 0);    \n      }\n    }\n    if (doc.accountFrom_id.split('.')[1] == 'cash' || doc.accountFrom_id.split('.')[1] == 'bank' || doc.accountFrom_id.split('.')[1] == 'check') {\n      if (doc.state == 'WAITING'){\n        emit([doc.accountFrom_id, doc.closed, doc.close_id, doc.both, doc._id], 0);\n      } else {\n        emit([doc.accountFrom_id, doc.closed, doc.close_id, doc.both, doc._id], -(parseFloat(doc.currency_amount) || 0));\n      }\n    }\n  }\n}"
      },
      "barcode": {
        "map": "function (doc) {\n  if(doc._id.split(\".\")[0] == 'product'){\n    if (doc.barcode){\n      emit([doc.barcode.toString()], 1);\n    }\n  }\n}"
      }
    },
    "language": "javascript"
  }
  ]
}
